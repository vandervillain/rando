
name: Publish
on:
  push:
    branches:
    - master
  pull_request:
    branches:
      - master
env:
  AZURE_FUNCTIONAPP_NAME: rando-func
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './azure-function'
  DOTNET_VERSION: '6.0.104'
  AZURE_WEBAPP_NAME: rando-client
  AZURE_WEBAPP_PACKAGE_PATH: './client/dist'
  NODE_VERSION: '16.x'
jobs:
  build-and-deploy-func:
    name: Build and Deploy Function
    runs-on: windows-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: pwsh
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
  build-and-deploy-client:
    name: Build and Deploy Client
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Create env file
      run: |
        cd client
        touch .env
        echo NODE_ENV=production >> .env
        echo SIGNALR_SERVER_URL=https://rando.gg >> .env
        echo TURN_SERVER=turn:165.232.150.149:3478 >> .env
        echo TURN_SERVER_FORCE_RELAY=false >> .env
        echo TURN_SERVER_SERVER_USER=test >> .env
        echo TURN_SERVER_SERVER_PASS=test123 >> .env
        cat .env
    - name: yarn install, build, and test
      run: |
        yarn install:client
        yarn build:client:prod
    - name: 'Deploy to Azure WebApp'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  # test:
  #   name: Test
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: microsoft/playwright-github-action@v1

  #     - name: Inject Server Environment Variables
  #       run: echo "${{ secrets.SERVER_ENV_VARIABLES }}" > server/.env

  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '14.16.0'

  #     - name: Install Dependencies
  #       run: yarn --frozen-lockfile && yarn install-dependencies

  #     - name: Build
  #       run: yarn build

  #     - name: Test
  #       run: yarn test

  #     - name: Publish Artifacts
  #       uses: actions/upload-artifact@v2
  #       if: ${{ always() }}
  #       with:
  #         name: Test Results
  #         path: client/tests/screenshots