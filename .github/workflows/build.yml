name: Publish
on:
  push:
    branches:
    - master
  pull_request:
    branches:
      - master
#   #release:
#     #types: [published]
jobs:
  test:
    name: Test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: microsoft/playwright-github-action@v1

      - name: Inject Server Environment Variables
        run: echo "${{ secrets.SERVER_ENV_VARIABLES }}" > server/.env

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: '14.16.0'

      - name: Install Dependencies
        run: yarn --frozen-lockfile && yarn install-dependencies

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

      - name: Publish Artifacts
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: Test Results
          path: client/tests/screenshots
  publish:
    name: Publish Image to Docker Hub
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Inject Server Environment Variables
        run: echo "${{ secrets.SERVER_ENV_VARIABLES }}" > server/.env

      - name: Build containers
        run: docker-compose down && docker-compose build

      - name: Login to Docker
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}

      - name: Push to Docker
        run: docker-compose push
  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - name: SSH into DigitalOcean, pull and dock
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SSH_HOST}}
          key: ${{secrets.SSH_KEY}}
          username: ${{secrets.SSH_USERNAME}}
          script_stop: true
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
            rm -rf rando
            git clone https://github.com/vandervillain/rando.git
            cd rando
            echo "${{ secrets.SERVER_ENV_VARIABLES }}" > server/.env
            yarn docker:refresh
